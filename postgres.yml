- hosts: server1:server3
  vars:
    pg_dir: /var/lib/pgsql/10/data/
  tasks:

# ping 
    - name: pinging
      ping:

# install rpms
    - name: configure repo
      yum:
        name: https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm 
    - name: install pg10
      yum: 
        name: postgresql10
    - name: install pg10-server
      yum: 
        name: postgresql10-server
    - name: install pg10-contrib
      yum:
        name: postgresql10-contrib

# config postgres
    - name: initdb
      shell: /usr/pgsql-10/bin/postgresql-10-setup initdb
      args:
        creates: "{{ pg_dir }}postgresql.conf"
    - name: update config file
      template:
        src: postgresql.conf
        dest: "{{ pg_dir }}"
        owner: postgres
    - name:
      template:
        src: pg_hba.conf
        dest: "{{ pg_dir }}" 

# config SSL
    - name: enable ssl phase 1
      shell: openssl req -nodes -new -text -out server.req -subj "/" || test -e  server.req 
      args:
         creates: "{{ pg_dir }}server.key"
    - name: enable ssl phase 2
      shell: openssl rsa -in privkey.pem -out {{ pg_dir }}server.key
      args:
         creates: "{{ pg_dir }}server.key"
    - name: enable ssl phase 3
      shell: openssl req -x509 -in server.req -text -key {{ pg_dir }}server.key -out {{ pg_dir }}server.crt 
      args:
         creates: "{{ pg_dir }}server.key"
    - name: enable ssl phase 4
      shell: chmod og-rwx {{ pg_dir }}server.key
      args:
         creates: "{{ pg_dir }}server.key"
    - name: enable ssl phase 5
      shell: chown postgres:postgres {{ pg_dir }}server.key {{ pg_dir }}server.crt
      args:
         creates: "{{ pg_dir }}server.key"

# config kernel parameters
    - name: set huge pages
      sysctl: 
         name: vm.nr_hugepages
         value: 750 
         sysctl_set: yes
         reload: yes
    - name: set dirty ratio 1
      sysctl: 
         name: vm.dirty_background_ratio
         value: 99
         sysctl_set: yes
         reload: yes
    - name: set dirty ratio 2
      sysctl:
         name: vm.dirty_ratio
         value: 99
         sysctl_set: yes
         reload: yes

# install Pgbadger
    - name: install httpd
      yum: 
         name: httpd
    - name: enable httpd
      systemd:
         name: httpd
         state: started
    - name: create pgbadger dir
      shell: mkdir -p /var/www/html/pgbadger
      args:
         creates: /var/www/html/pgbadger
    - name: chown of the directory
      shell: chown apache:apache /var/www/html/pgbadger
    - name: chmod of the directory
      shell: chmod o+wr /var/www/html/pgbadger
    - name: install pgbadger
      yum:
         name: pgbadger
    - name: register cron pgbadger entry
      cron:
         name: create pgbadger report
         job: "sudo pgbadger -I  -O /var/www/html/pgbadger /var/lib/pgsql/10/data/log/postgresql.log" 
         minute: 0
         user: postgres 

# primary configuration
- hosts: server1
  vars:
     script_dir: /var/lib/pgsql/
  tasks:
    - name: install daily backup script
      template:
         src: backup_postgresql.sh
         dest: "{{ script_dir }}backup_postgresql.sh"
         owner: postgres
    - name: setup cron 
      cron:
         name: register backup job
         job: "/bin/sh {{ script_dir }}backup_postgresql.sh" 
         minute: 0
         hour: 23
         user: postgres

# standby configuration
- hosts: server2
  vars:
     backup_dir: /var/lib/pgsql/ 
  tasks:
     - name: setup cron job
       cron:
          name: register cleanup job
          job: find {{ backup_dir }}archive_logs/ -type f -mtime +3 -delete
          minute: 0
          hour: 23
          user: postgres
     - name: create archive log dir
       shell: "mkdir {{ backup_dir }}archive_logs"
       args:
         creates: "{{ backup_dir }}archive_logs"
     - name: change own
       shell: chown postgres:postgres /var/lib/pgsql/archive_logs
     - name: create backup
       shell: "mkdir {{ backup_dir }}backups"
       args:
          creates: "{{ backup_dir }}backups"
     - name: change own
       shell: "chown postgres:postgres {{ backup_dir }}backups"
